<?php
//phpinfo() contains some debug info. Not normally needed.
//phpinfo();


$base_path  = "/data/archive/data/lt/Skycam/";
$night_excluded = 0;

# Turn off the umask. This means that files generated by this script will default to 
# globally read-writable unless they are changed with chmod(); This would not be used for
# normal file creation, but everything generated herein is public data availble to all users
# via the web server.
umask(0000);

// Define a unique ID number for this search which will be used to identify log files etc
// Simple method for a uniqur number is the time in microseconds. Search results are purged at one week
// so any older than that 
// old need not be kept and can be over-written, so we fmod() the time by the one-week-in-senconds (604800 sec).
// We'll accept the risk of two queries being made in the same microsecond!
// (one month in seconds is 2678400)
$unique = fmod( microtime(true),604800.0) ;
//echo "$unique \n";

?>

<html>
  <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <LINK REL='stylesheet' TYPE='text/css' HREF='/newmain.css'>
  <title>Search results</title>
  </head>

  <body bgcolor=#FFFFFF>
  <A HREF=http://telescope.livjm.ac.uk/><IMG SRC=/pics/backgrounds/75pix_padding.png ALT='Liverpool Telescope' BORDER=0></A><BR>

<? 


// TARGNAME CRITERION
$targname_criterion = "";
if (strlen($_POST['targname'])>0) {
  $targname_criterion = " and object like '%".$_POST['targname']."%' ";
}

// TIME CRITERIA
//
// Which time criteria are being used?
// We read both the start/end dates and the night-of field. If someone enters both then both will be used
// and unless they are the same, you are not going to get any results.
//
// startdate and enddate
//if ( $_POST['datetype'] == "nightof" ) {
//  $start_end_criteria = " and __filename like '%${_POST[startdate]}%' ";
//} 
//else 
if ( $_POST['rangedatetype'] == "mjd" ) {
  $start_end_criteria = "";
  if ( $_POST['startdate'] != "" ) {
    if ( strspn( $_POST['startdate'], "01234567890 .") != strlen($_POST['startdate']) ) {
      die("Error: MJD start time not a legal number.");
    }
    $start_end_criteria .= " and mjd > $_POST[startdate] ";
  }
  if ( $_POST['enddate'] != "" ) {
    if ( strspn( $_POST['enddate'], "01234567890 .") != strlen($_POST['enddate']) ) {
      die("Error: MJD end time not a legal number.");
    }
    $start_end_criteria .= " and mjd < $_POST[enddate] ";
  }
} else if ( $_POST['rangedatetype'] == "date" ) {
  $start_end_criteria = "";
  // Input is in a clock date-time format. Rather than parse this according to a set of rules we define
  // as a quick fix I will use the shell date command which can read a lot of date formats in a rather tolerant
  // manner. I use date to convert to unix seconds and then convert that to mjd. The search can then be run in 
  // MJD just as if MJD had been selected. 
  echo "Comment: People write dates in so many different formats, we list here the date as we understand it after parsing so you can check we have correctly interpretted what you meant.<br>";
  if ( $_POST['startdate'] != "" ) {
//
// XXX There are so many time handling functions in php I am sure this could be done without calling the shell if I spend some time to work out how
//
    $startdate_as_second = `date +%s -u -d "${_POST['startdate']}" `;
    $startdate_as_date   = `date     -u -d "${_POST['startdate']}" `;
    $startdate_as_mjd = ($startdate_as_second / 86400.0) + 40587.0 ;
    echo "Start date (parsed) = $startdate_as_date<br>";
    $start_end_criteria .= " and mjd > $startdate_as_mjd ";
  }
  if ( $_POST['enddate'] != "" ) {
    $enddate_as_second = `date +%s -u -d "${_POST['enddate']}" `;
    $enddate_as_date   = `date     -u -d "${_POST['enddate']}" `;
    $enddate_as_mjd = ($enddate_as_second / 86400.0) + 40587.0;
    echo "End date (parsed) = $enddate_as_date<br>";
    $start_end_criteria .= " and mjd < $enddate_as_mjd ";
  }
}
else {
  $start_end_criteria = "";
}
// Night-of criterion
$nightof_criterion = "";
if ( $_POST['nightofdate'] != "" ) {
  if ( strspn( $_POST['nightofdate'], "01234567890 ") != strlen($_POST['nightofdate']) ) {
    die("Error: 'Night of' date must be specified as an integer in the form YYYYMMDD.");
  }
  $nightof_criterion = " and __filename like \"%${_POST['nightofdate']}%\" ";
} 
// Join the two time criteria
if ( $start_end_criteria != "" && $nightof_criterion != "") 
  echo "Comment: You have set both a time bracket and a single night-of criterion. This is legal, but they are combined with an AND, so unless the two criteria overlap you will get no search matches.<br>";
$time_criteria = $start_end_criteria . $nightof_criterion ; 
//echo $time_criteria . "<br>";


// Instrument Criteria
//
$camera_criterion = "";
if( $_POST['instrument'] == "" || $_POST['instrument'] == "Any") {
  // echo "Comment: Either camera";
} else {
  $camera_criterion = " and instrume = \"${_POST['instrument']}\" ";
  // echo "Comment: One camera only.";
}

// Extra criteria. 
// You can write whatever you like in here.
$extra_criteria = "";
if (strlen($_POST['extra'])>0) {
  $extra_criteria = $_POST['extra'];
}


// Sorting the results
//
$order_criteria = "";
if( $_POST['sortby1'] != "" ) {
  $order_criteria = "ORDER by $_POST[sortby1]";
  if( $_POST['sortby2'] != "" ) {
    $order_criteria .= ",$_POST[sortby2]";
  }
}

// Max rows
// Not much parsing required here, but I do need to check the field contents are legal
if ( strspn( $_POST['max_rows'], "01234567890 ") != strlen($_POST['max_rows']) ) {
  die('Error: Illegal input. "Maximum rows to return" must be an integer' );
}
if ( $_POST['max_rows'] == "" ) {
  echo 'Comment: "Maximum rows to return" was blank. Using a default value of 1000.<br>';
  $_POST['max_rows'] = 1000;
}


//Configs to connect to the database
$host="lt-archive"; // Host name.
$db_user="fullfitsheaders"; // MySQL username.
$db_password="fullfitsheaders"; // MySQL password.
$database="fullfitsheaders"; // Database name.
$con = mysql_connect($host,$db_user,$db_password);
if (!$con) {
 die('Could not connect: ' . mysql_error());
}
mysql_select_db($database, $con);


// Run the search specified in the form
// date-obs needs to be quoted because it looks like an algebraic expression
// dec needs to be quoted because it is a MySQL function
// ctype 1 will be used later to determine of there is a successful WCS in this image
//$fields_to_select = "__filename,`date-obs`,".$_POST['XAXIS'].",".$_POST['YAXIS'];

$fields_to_select = "*";
//$fields_to_select = "__filename,`date-obs`,".$_POST['XAXIS'];
//.",".$_POST['YAXIS'];

//if ( strlen($_POST['fieldstoget'] )>0 ){
  //echo "fieldstoget length is ".count($_POST['fieldstoget'])."\n";
  //echo "Set to [".$_POST['fieldstoget']."]\n";;
//  $fields_to_select .= ",".$_POST['fieldstoget'];
//}


//echo                "select $fields_to_select from selectedkeysnum where 1 $position_criteria $targname_criterion $time_criteria $camera_criterion $extra_criteria $order_criteria limit $_POST[max_rows]<br>\n";
//$result=mysql_query("select $fields_to_select from selectedkeysnum where 1 $position_criteria $targname_criterion $time_criteria $camera_criterion $extra_criteria $order_criteria limit $_POST[max_rows] ");

echo                "select $fields_to_select from selectedkeysnum where 1 $time_criteria $extra_criteria  limit $_POST[max_rows]<br>\n";
$result=mysql_query("select $fields_to_select from selectedkeysnum where 1 $time_criteria $extra_criteria $order_criteria limit $_POST[max_rows] ");


//echo $result;
if ($result == FALSE) {
 die('Error: Database query failed. Probably an SQL syntax error.');
}

$num_rows = mysql_num_rows($result);
echo "Comment: There are $num_rows entries in the search results.<br>";

// Create the files into which we are going to write the lists for tarball creation
if ( $num_rows > 0 ) {
  if ( mkdir("/data/archive/webfiles/Skycam/Search/${unique}", 0777) == FALSE ) {
    die("Error: Unable to create log directory ${unique}<br>");
  }
  $fits_tarlist_handle = fopen("/data/archive/webfiles/Skycam/Search/${unique}/fitslist", "w");
  $jpg_tarlist_handle = fopen("/data/archive/webfiles/Skycam/Search/${unique}/jpglist", "w");
  if ( $fits_tarlist_handle == FALSE || $jpg_tarlist_handle == FALSE ) {
    die("Error: Unable to create list files fitslist and jpglist. (${unique})<br>");
  }
  #These are not required because umask has been set to 000.
  #chmod("/data/archive/webfiles/Skycam/Search/${unique}/fitslist", 0666);
  #chmod("/data/archive/webfiles/Skycam/Search/${unique}/jpglist", 0666);
}

// Read the names of the fields that have been extracted
$row = mysql_fetch_array($result);
$keys = array_keys($row);
$field_count = count($row) / 2 ;
mysql_data_seek ( $result , 0 ); 
//echo count($row) ."<br>";
//echo "$keys[0] $keys[1] = $row[0] <br>";
//echo "$keys[2] $keys[3] = $row[1] <br>";
//echo "$keys[4] $keys[5] = $row[2] <br>";
//echo "$keys[6] $keys[7] = $row[3] <br>";
//echo "$keys[8] $keys[9] = $row[4] <br>";
//echo "$keys[10] $keys[11] = $row[5] <br>";


echo "<p>";
echo "<table border=0 cellspacing=3>";
echo "<tr>";

for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
  $keyname = $keys[($ii*2)+1];
  echo "<th> $keyname </th>";
}
echo "</tr>";


$row_count = 0;
while($row = mysql_fetch_array($result)) {
  $row_count += 1;

  // Extract the yyyymmdd from the filename as $night_of
  $exploded_filename = explode("_",$row['__filename']);
  $nightof = $exploded_filename[2];

  //I might find a better way to do this, but it is handy to have both the exploded and contracted versions available.
  $exploded_utdate = explode("-",$row['date']);
  $utdate = implode("",$exploded_utdate);
  //Same again with time
  $exploded_utstart = explode(":",$row['utstart']);

 
  if ( $row_count % 3 == 0 ) 
    echo "<tr bgcolor=E3E3E3>";
  else
    echo "<tr bgcolor=FFFFFF>";

  for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
    echo "<td> ${row[$ii]} </td>";
  }

  echo "</tr>";
}
echo "</table>";

echo "</p>";
echo "<br>";


//
// Repeat the entire table formatted as plain ASCII text
// This is easier to cut and paste into bug reports
//
//Read column widths
// First rewind to the start of $result and then read though the full table checking for
// and remembering the longest value in each field
//echo "A plain ASCII version is easier to cut-and-paste into bug reports.<br>";
mysql_data_seek ( $result , 0 ); 
$row = mysql_fetch_array($result);
$max_lengths = mysql_fetch_lengths($result);
while($row = mysql_fetch_array($result)) {
  $lengths = mysql_fetch_lengths($result);
  for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
    if ( $lengths[$ii] > $max_lengths[$ii] ) $max_lengths[$ii] = $lengths[$ii];
  }
}
// Make sure max_length is at least 8 to give space for the FITS keyword to be displayed properly
for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
  if ( $max_lengths[$ii] < 8 ) $max_lengths[$ii] = 8 ;
}
// Echo the column widths to the output
//for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
//  echo "Length $ii = ${max_lengths[$ii]} <br>" ; 
//}
// Rewind to start again of $result again
mysql_data_seek ( $result , 0 ); 
// Re-write the table just like the one above by as <pre> plain text
echo "<pre>";
$handle = fopen("/var/www/html/pics/fullfits.dat", "w");
for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
  $keyname = $keys[($ii*2)+1];
  $aa = $max_lengths[$ii] + 1;
  $bb = $max_lengths[$ii] ;
//  printf ( "%${aa}.${bb}s",$keyname ) ;
  fprintf ( $handle,  "%${aa}.${bb}s,", $keyname ); 
}
//echo "<br>\n";

// Terminate header
fputs( $handle, "\n" );

while($row = mysql_fetch_array($result)) {
  for( $ii = 0 ; $ii < $field_count ; $ii++ ) {
    if ( strlen($row[3])  ) {
      $aa = $max_lengths[$ii] + 1;
      $bb = $max_lengths[$ii] ;
//    printf ( "%${aa}.${bb}s", $row[$ii]  ) ; 
//    fprintf ( $handle,  "%${aa}.${bb}s,", $row[$ii] ) ; 
    fprintf ( $handle,  "%s,", $row[$ii] ) ; 
    }
  }
//  echo "\n";

  if ( strlen($row[3])  ) {
    fputs( $handle, "\n" );
  }
}
fclose( $handle );

#$xlab=$keys[5];
#$ylab=$keys[7];
#system( sprintf( "gnuplot -e \"XLAB='%s';YLAB='%s';load 'fullfits.gpi'\"", $xlab, $ylab  ) );

echo "</pre>";
// End of plain ASCII output table


if($night_excluded > 0) {
  echo "<p>";
  echo "$night_excluded images were excluded from the above table because they were not 'night time'.";
  echo "</p>";
}


mysql_free_result($result);
if($num_rows > 0 ) {
  fclose($jpg_tarlist_handle);
  fclose($fits_tarlist_handle);
}

mysql_close($con);

?>


<iframe width="100%" height="100%" frameborder="1" src="http://telescope.livjm.ac.uk/jsplots/scatter_plot_dynamic_2.html">


</body>
</html>
